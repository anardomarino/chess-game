##############################################
#
#	piece_vals.py
#	generated data from chess-programming-wiki
#	for use by chessAI.py
#
##############################################

# Values assuming orientation == 1 && self.color == 'WHITE'
# 	or orientation == 0 && self.color == 'BLACK'
# Else boards should be flipped

# Values are additives of chessAI.py "values" dict
p_vals = {'e' : 0,
		  'p' : 1,
		  'n' : 3,
		  'b' : 3,
		  'r' : 5,
		  'q' : 9,
		  'k' : 90}

const_kmap 	=  [[-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
				[-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
				[-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
				[-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
				[-2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0],
				[-1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0],
				[ 2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0],
				[ 2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0]]

const_qmap 	=  [[-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0],
				[-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],
				[-1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],
				[-0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],
				[ 0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],
				[-1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],
				[-1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0],
				[-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0]]

const_pmap 	=  [[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0],
				[ 1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0],
				[ 0.5,  0.5,  1.0,  2.5,  2.5,  0.5,  0.0, -0.5],
				[ 0.0,  0.0,  0.0,  2.0,  2.0,  0.0,  0.0,  0.0],
				[ 0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5],
				[ 0.5,  1.0,  1.0, -2.0, -2.0,  1.0,  1.0,  0.5],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]]

const_nmap 	=  [[-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0],
				[-4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0],
				[-3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0],
				[-3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0],
				[-3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0],
				[-3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0],
				[-4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0],
				[-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0]]

const_rmap 	=  [[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5],
				[-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
				[-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
				[-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
				[-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
				[-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
				[ 0.0,  0.0,  0.0,  0.5,  0.5,  0.0,  0.0,  0.0]]

const_bmap 	=  [[-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0],
				[-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],
				[-1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0],
				[-1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0],
				[-1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0],
				[-1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0],
				[-1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0],
				[-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]]

zeroes     =   [[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
				[ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]]

const_maps = {
	'p' : const_pmap,
	'n' : const_nmap,
	'b' : const_bmap,
	'r' : const_rmap,
	'k' : const_kmap,
	'q' : const_qmap,
	'e' : zeroes
}

def dynamicValue(ally, name, side, pos, orientation):
	multiplier = p_vals[name]
	if (side == "WHITE" and orientation) or (side == "BLACK" and not orientation):
		r,c = pos
	else:
		r,c = 7-pos[0], 7-pos[1]

	val = const_maps[name][r][c]

	if ally == side[0].lower():
		return  multiplier + val 
	else:
		return -multiplier - val